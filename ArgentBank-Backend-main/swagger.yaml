swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.1.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Fetch User Profile
      description: Get the user profile using the Bearer token
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: Update user profile information.
      parameters:
        - in: body
          name: body
          description: User profile update payload
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get All Transactions
      description: Retrieve all transactions for the current month, grouped by account.
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      responses:
        '200':
          description: List of transactions grouped by account
          schema:
            $ref: '#/definitions/TransactionsGroupedByAccount'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction Details
      description: Retrieve details of a specific transaction by its ID.
      parameters:
        - in: path
          name: transactionId
          description: The ID of the transaction.
          required: true
          type: integer
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: Update specific details of a transaction.
      parameters:
        - in: path
          name: transactionId
          description: The ID of the transaction.
          required: true
          type: integer
        - in: body
          name: body
          description: Transaction update payload
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionsGroupedByAccount:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            accountId:
              type: integer
            accountName:
              type: string
            transactions:
              type: array
              items:
                $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      transactionId:
        type: integer
      date:
        type: string
        description: Date of the transaction in ISO format
      description:
        type: string
      amount:
        type: number
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
